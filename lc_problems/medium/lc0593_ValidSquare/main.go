func validSquare(p1 []int, p2 []int, p3 []int, p4 []int) bool {
	ans := []int{
		(p1[0]-p2[0])*(p1[0]-p2[0]) + (p1[1]-p2[1])*(p1[1]-p2[1]),
		(p1[0]-p3[0])*(p1[0]-p3[0]) + (p1[1]-p3[1])*(p1[1]-p3[1]),
		(p1[0]-p4[0])*(p1[0]-p4[0]) + (p1[1]-p4[1])*(p1[1]-p4[1]),
		(p2[0]-p3[0])*(p2[0]-p3[0]) + (p2[1]-p3[1])*(p2[1]-p3[1]),
		(p2[0]-p4[0])*(p2[0]-p4[0]) + (p2[1]-p4[1])*(p2[1]-p4[1]),
		(p3[0]-p4[0])*(p3[0]-p4[0]) + (p3[1]-p4[1])*(p3[1]-p4[1]),
	}
	sort.Ints(ans)
	return ans[0] != 0 && (ans[0] == ans[1] && ans[1] == ans[2] && ans[2] == ans[3]) && ans[4] == ans[5]
}